// db/migrate-wallet-profiling.js - Migration for Task 8: Wallet Profiling v1
const Database = require('better-sqlite3');
const db = new Database('db/agent.db');

console.log('üîÑ Migrating database for Task 8: Wallet Profiling v1...');

try {
  // Add new columns to tokens table
  db.exec(`
    ALTER TABLE tokens ADD COLUMN sniper_count INTEGER DEFAULT 0;
  `);
  console.log('‚úÖ Added sniper_count column to tokens');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ sniper_count column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding sniper_count column:', error.message);
  }
}

try {
  db.exec(`
    ALTER TABLE tokens ADD COLUMN bundler_count INTEGER DEFAULT 0;
  `);
  console.log('‚úÖ Added bundler_count column to tokens');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ bundler_count column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding bundler_count column:', error.message);
  }
}

try {
  db.exec(`
    ALTER TABLE tokens ADD COLUMN insider_count INTEGER DEFAULT 0;
  `);
  console.log('‚úÖ Added insider_count column to tokens');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ insider_count column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding insider_count column:', error.message);
  }
}

try {
  db.exec(`
    ALTER TABLE tokens ADD COLUMN health_score REAL DEFAULT 0;
  `);
  console.log('‚úÖ Added health_score column to tokens');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ health_score column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding health_score column:', error.message);
  }
}

try {
  db.exec(`
    ALTER TABLE tokens ADD COLUMN pool_created_at TEXT;
  `);
  console.log('‚úÖ Added pool_created_at column to tokens');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ pool_created_at column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding pool_created_at column:', error.message);
  }
}

try {
  db.exec(`
    ALTER TABLE tokens ADD COLUMN pool_signature TEXT;
  `);
  console.log('‚úÖ Added pool_signature column to tokens');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ pool_signature column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding pool_signature column:', error.message);
  }
}

try {
  db.exec(`
    ALTER TABLE tokens ADD COLUMN dev_wallet TEXT;
  `);
  console.log('‚úÖ Added dev_wallet column to tokens');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ dev_wallet column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding dev_wallet column:', error.message);
  }
}

try {
  // Add new columns to holders table
  db.exec(`
    ALTER TABLE holders ADD COLUMN holder_type TEXT DEFAULT 'unknown';
  `);
  console.log('‚úÖ Added holder_type column to holders');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ holder_type column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding holder_type column:', error.message);
  }
}

try {
  db.exec(`
    ALTER TABLE holders ADD COLUMN funded_by TEXT;
  `);
  console.log('‚úÖ Added funded_by column to holders');
} catch (error) {
  if (error.message.includes('duplicate column name')) {
    console.log('‚úÖ funded_by column already exists');
  } else {
    console.log('‚ö†Ô∏è  Error adding funded_by column:', error.message);
  }
}

try {
  // Create funding_edges table for graph analysis
  db.exec(`
    CREATE TABLE IF NOT EXISTS funding_edges (
      id INTEGER PRIMARY KEY AUTOINCREMENT,
      src_wallet TEXT NOT NULL,
      dst_wallet TEXT NOT NULL,
      amount_sol REAL,
      timestamp TEXT,
      signature TEXT,
      UNIQUE(src_wallet, dst_wallet, signature)
    );
  `);
  console.log('‚úÖ Created funding_edges table');
} catch (error) {
  console.log('‚ö†Ô∏è  Error creating funding_edges table:', error.message);
}

try {
  // Add indexes for performance
  db.exec(`
    CREATE INDEX IF NOT EXISTS idx_funding_edges_src
    ON funding_edges (src_wallet);
  `);
  console.log('‚úÖ Added funding_edges src index');
} catch (error) {
  console.log('‚ö†Ô∏è  Error creating funding_edges src index:', error.message);
}

try {
  db.exec(`
    CREATE INDEX IF NOT EXISTS idx_funding_edges_dst
    ON funding_edges (dst_wallet);
  `);
  console.log('‚úÖ Added funding_edges dst index');
} catch (error) {
  console.log('‚ö†Ô∏è  Error creating funding_edges dst index:', error.message);
}

try {
  db.exec(`
    CREATE INDEX IF NOT EXISTS idx_funding_edges_timestamp
    ON funding_edges (timestamp);
  `);
  console.log('‚úÖ Added funding_edges timestamp index');
} catch (error) {
  console.log('‚ö†Ô∏è  Error creating funding_edges timestamp index:', error.message);
}

try {
  db.exec(`
    CREATE INDEX IF NOT EXISTS idx_tokens_health_score
    ON tokens (health_score DESC);
  `);
  console.log('‚úÖ Added tokens health_score index');
} catch (error) {
  console.log('‚ö†Ô∏è  Error creating tokens health_score index:', error.message);
}

console.log('üéâ Wallet Profiling migration completed!');
console.log('üîç Enhanced functionality added:');
console.log('   - Sniper, Bundler, Insider detection');
console.log('   - Health scoring system');
console.log('   - Pool creation tracking');
console.log('   - Funding graph analysis');
console.log('   - Wallet classification system');
